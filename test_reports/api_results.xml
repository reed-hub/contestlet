<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="69" failures="0" skipped="0" tests="70" time="5.001" timestamp="2025-08-30T07:27:44.051346" hostname="MacBook-Pro-8.local"><testcase classname="tests.api.test_all_endpoints.TestPublicEndpoints" name="test_root_endpoint" time="0.195"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_all_endpoints.TestPublicEndpoints" name="test_health_endpoint" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_all_endpoints.TestPublicEndpoints" name="test_manifest_endpoint" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_all_endpoints.TestPublicEndpoints" name="test_active_contests_endpoint" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_all_endpoints.TestPublicEndpoints" name="test_contest_detail_endpoint" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_all_endpoints.TestPublicEndpoints" name="test_nearby_contests_endpoint" time="0.009"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_all_endpoints.TestPublicEndpoints" name="test_location_states_endpoint" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_all_endpoints.TestAuthenticationEndpoints" name="test_request_otp_endpoint" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_all_endpoints.TestAuthenticationEndpoints" name="test_verify_otp_endpoint" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_all_endpoints.TestAuthenticationEndpoints" name="test_refresh_token_endpoint" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_all_endpoints.TestUserEndpoints" name="test_user_profile_endpoint" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_all_endpoints.TestUserEndpoints" name="test_update_user_profile_endpoint" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_all_endpoints.TestUserEndpoints" name="test_user_active_entries_endpoint" time="0.009"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_all_endpoints.TestAdminEndpoints" name="test_admin_contests_endpoint" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_all_endpoints.TestAdminEndpoints" name="test_admin_contest_detail_endpoint" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_all_endpoints.TestAdminEndpoints" name="test_admin_notifications_endpoint" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_all_endpoints.TestAdminEndpoints" name="test_admin_users_endpoint" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_all_endpoints.TestSponsorWorkflowEndpoints" name="test_create_draft_contest_endpoint" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_all_endpoints.TestSponsorWorkflowEndpoints" name="test_sponsor_drafts_listing_endpoint" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_all_endpoints.TestSponsorWorkflowEndpoints" name="test_sponsor_pending_contests_endpoint" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_all_endpoints.TestAdminApprovalEndpoints" name="test_approval_queue_endpoint" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_all_endpoints.TestAdminApprovalEndpoints" name="test_approval_statistics_endpoint" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_all_endpoints.TestAdminApprovalEndpoints" name="test_approval_audit_trail_endpoint" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_all_endpoints.TestLocationEndpoints" name="test_location_validation_endpoint" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_all_endpoints.TestLocationEndpoints" name="test_location_geocode_endpoint" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_all_endpoints.TestMediaEndpoints" name="test_media_upload_endpoint" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_all_endpoints.TestMediaEndpoints" name="test_media_delete_endpoint" time="0.025"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_all_endpoints.TestContestDeletionEndpoint" name="test_delete_draft_contest" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_all_endpoints.TestContestDeletionEndpoint" name="test_delete_protected_contest" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_all_endpoints.TestErrorHandling" name="test_404_endpoints" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_all_endpoints.TestErrorHandling" name="test_405_method_not_allowed" time="0.007"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_all_endpoints.TestErrorHandling" name="test_401_unauthorized_access" time="0.026"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_all_endpoints.TestErrorHandling" name="test_403_forbidden_access" time="0.009"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_all_endpoints.TestErrorHandling" name="test_422_validation_errors" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_all_endpoints.TestErrorHandling" name="test_cors_headers_on_errors" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_all_endpoints.TestPaginationAndFiltering" name="test_contests_pagination" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_all_endpoints.TestPaginationAndFiltering" name="test_contests_filtering" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_auth_endpoints.TestAuthEndpoints" name="test_health_check" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_auth_endpoints.TestAuthEndpoints" name="test_health_endpoint" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_auth_endpoints.TestAuthEndpoints" name="test_manifest_endpoint" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_auth_endpoints.TestAuthEndpoints" name="test_request_otp_success" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_auth_endpoints.TestAuthEndpoints" name="test_request_otp_invalid_phone" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_auth_endpoints.TestAuthEndpoints" name="test_request_otp_missing_phone" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_auth_endpoints.TestAuthEndpoints" name="test_verify_otp_success" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_auth_endpoints.TestAuthEndpoints" name="test_verify_otp_invalid_code" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_auth_endpoints.TestAuthEndpoints" name="test_verify_otp_missing_fields" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_auth_endpoints.TestAuthEndpoints" name="test_verify_otp_nonexistent_user" time="0.010"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_auth_endpoints.TestAuthRateLimiting" name="test_otp_rate_limiting" time="0.009"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_auth_endpoints.TestAuthRateLimiting" name="test_otp_rate_limiting_different_phones" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_auth_endpoints.TestAuthSecurity" name="test_phone_number_validation" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_auth_endpoints.TestAuthSecurity" name="test_otp_code_validation" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_auth_endpoints.TestAuthSecurity" name="test_authentication_token_security" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_auth_endpoints.TestAuthErrorHandling" name="test_database_connection_error" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_auth_endpoints.TestAuthErrorHandling" name="test_external_service_error" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_auth_endpoints.TestAuthErrorHandling" name="test_validation_error_format" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_enhanced_status_system.TestEnhancedContestStatusSystem" name="test_contest_status_enum_values" time="0.000" /><testcase classname="tests.api.test_enhanced_status_system.TestEnhancedContestStatusSystem" name="test_draft_contest_creation" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_enhanced_status_system.TestEnhancedContestStatusSystem" name="test_submit_contest_for_approval" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_enhanced_status_system.TestEnhancedContestStatusSystem" name="test_admin_approve_contest" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_enhanced_status_system.TestEnhancedContestStatusSystem" name="test_admin_reject_contest" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_enhanced_status_system.TestEnhancedContestStatusSystem" name="test_contest_lifecycle_transitions" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_enhanced_status_system.TestEnhancedContestStatusSystem" name="test_contest_deletion_rules" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_enhanced_status_system.TestEnhancedContestStatusSystem" name="test_status_audit_trail" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_enhanced_status_system.TestEnhancedContestStatusSystem" name="test_bulk_approval_operations" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_enhanced_status_system.TestEnhancedContestStatusSystem" name="test_approval_queue_filtering" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_enhanced_status_system.TestEnhancedContestStatusSystem" name="test_sponsor_workflow_permissions" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_enhanced_status_system.TestEnhancedContestStatusSystem" name="test_contest_status_computed_fields" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_enhanced_status_system.TestEnhancedStatusSystemIntegration" name="test_status_system_with_entries" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_enhanced_status_system.TestEnhancedStatusSystemIntegration" name="test_status_system_with_notifications" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase><testcase classname="tests.api.test_enhanced_status_system.TestEnhancedStatusSystemIntegration" name="test_status_system_performance" time="0.008"><error message="failed on setup with &quot;pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead&#10;&#10;For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs&quot;">tests/conftest.py:74: in client
    from app.main import app
app/main.py:182: in &lt;module&gt;
    routers = auto_discover_routers()
app/main.py:72: in auto_discover_routers
    module = importlib.import_module(f"app.routers.{module_name}")
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
app/routers/__init__.py:1: in &lt;module&gt;
    from .auth import router as auth_router
app/routers/auth.py:18: in &lt;module&gt;
    from app.core.dependencies.auth import get_current_user
app/core/dependencies/auth.py:12: in &lt;module&gt;
    from app.core.dependencies.services import get_auth_service
app/core/dependencies/services.py:10: in &lt;module&gt;
    from app.core.services.contest_service import ContestService
app/core/services/contest_service.py:22: in &lt;module&gt;
    from app.shared.types.pagination import PaginationParams, ContestFilterParams, PaginatedResult, create_paginated_result
app/shared/types/pagination.py:57: in &lt;module&gt;
    class SortParams(BaseModel):
app/shared/types/pagination.py:62: in SortParams
    sort_order: str = Field(
/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/pydantic/fields.py:796: in Field
    raise PydanticUserError('`regex` is removed. use `pattern` instead', code='removed-kwargs')
E   pydantic.errors.PydanticUserError: `regex` is removed. use `pattern` instead
E   
E   For further information visit https://errors.pydantic.dev/2.5/u/removed-kwargs</error></testcase></testsuite></testsuites>